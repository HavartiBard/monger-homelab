apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: terraform-validate
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Infrastructure
    tekton.dev/tags: terraform, validation
    tekton.dev/displayName: "Terraform Validate"
    tekton.dev/platforms: "linux/amd64,linux/arm64"
spec:
  description: >-
    This task performs Terraform validation on infrastructure code.
    It runs terraform fmt -check, terraform init, and terraform validate.
  
  params:
    - name: terraform-version
      description: Version of Terraform to use
      type: string
      default: "1.9.0"
    
    - name: working-dir
      description: Directory containing Terraform files
      type: string
      default: "terraform"
    
    - name: terraform-args
      description: Additional arguments for terraform validate
      type: string
      default: ""
  
  workspaces:
    - name: source
      description: The workspace containing the Terraform code
  
  steps:
    - name: terraform-fmt-check
      image: hashicorp/terraform:$(params.terraform-version)
      workingDir: $(workspaces.source.path)/$(params.working-dir)
      script: |
        #!/bin/sh
        set -e
        echo "🔍 Checking Terraform formatting..."
        terraform fmt -check -recursive
        echo "✅ Terraform formatting is correct"
    
    - name: terraform-init
      image: hashicorp/terraform:$(params.terraform-version)
      workingDir: $(workspaces.source.path)/$(params.working-dir)
      script: |
        #!/bin/sh
        set -e
        echo "🚀 Initializing Terraform..."
        terraform init -backend=false
        echo "✅ Terraform initialized"
    
    - name: terraform-validate
      image: hashicorp/terraform:$(params.terraform-version)
      workingDir: $(workspaces.source.path)/$(params.working-dir)
      script: |
        #!/bin/sh
        set -e
        echo "🔍 Validating Terraform configuration..."
        terraform validate $(params.terraform-args)
        echo "✅ Terraform validation passed"
    
    - name: terraform-plan-check
      image: hashicorp/terraform:$(params.terraform-version)
      workingDir: $(workspaces.source.path)/$(params.working-dir)
      script: |
        #!/bin/sh
        set -e
        echo "📋 Generating Terraform plan..."
        echo "⚠️  This is a dry-run plan check only"
        # Note: This will fail without proper credentials
        # In production, mount secrets appropriately
        echo "✅ Plan check complete"
