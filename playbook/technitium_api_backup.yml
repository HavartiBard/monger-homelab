---
# Daily automated backup using Technitium's native backup API
# This creates proper .zip backups that can be restored via the UI

- name: Backup Technitium DNS Using Native API
  hosts: technitium_dns
  gather_facts: no
  vars:
    unraid_backup_path: "/mnt/unraid-backups/technitium"
    backup_retention_days: 30
    
  tasks:
    - name: Get timestamp
      command: date +%Y-%m-%d-%H%M
      register: timestamp_result
      changed_when: false
      delegate_to: localhost
      run_once: yes
    
    - name: Set backup variables
      set_fact:
        backup_timestamp: "{{ timestamp_result.stdout }}"
        backup_file: "/tmp/{{ inventory_hostname }}-{{ timestamp_result.stdout }}.zip"
    
    - name: Check disk space
      shell: df -h /tmp | tail -1
      register: disk_space
      changed_when: false
    
    - name: Display disk space
      debug:
        msg: "Disk space on {{ inventory_hostname }}: {{ disk_space.stdout }}"
    
    - name: Cleanup old backup files in /tmp
      shell: find /tmp -name "{{ inventory_hostname }}-*.zip" -type f -mtime +1 -delete
      ignore_errors: yes
      changed_when: false
    
    - name: Create backup using Technitium API
      uri:
        url: "http://{{ ansible_host }}:{{ technitium.port }}/api/settings/backup?token={{ technitium.api_token }}"
        method: GET
        dest: "{{ backup_file }}"
        status_code: 200
        timeout: 300
      register: backup_result
    
    - name: Pull backup to Unraid NAS
      shell: |
        scp automation@{{ ansible_host }}:{{ backup_file }} {{ unraid_backup_path }}/{{ inventory_hostname }}-{{ backup_timestamp }}.zip
      delegate_to: localhost
      become: no
    
    - name: Cleanup remote backup file
      file:
        path: "{{ backup_file }}"
        state: absent
    
    - name: Display backup location
      debug:
        msg: "âœ… Backup saved to {{ unraid_backup_path }}/{{ inventory_hostname }}-{{ backup_timestamp }}.zip"


- name: Cleanup Old Backups on Unraid
  hosts: localhost
  gather_facts: no
  become: no
  vars:
    unraid_backup_path: "/mnt/unraid-backups/technitium"
    backup_retention_days: 30
    
  tasks:
    - name: Find backups older than retention period
      find:
        paths: "{{ unraid_backup_path }}"
        patterns: "*.zip"
        age: "{{ backup_retention_days }}d"
      register: old_backups

    - name: Remove old backups
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_backups.files }}"
      when: old_backups.files | length > 0

    - name: Display cleanup summary
      debug:
        msg: "Removed {{ old_backups.files | length }} old backup(s)"


- name: Backup Summary Report
  hosts: localhost
  gather_facts: no
  become: no
  vars:
    unraid_backup_path: "/mnt/unraid-backups/technitium"
    backup_retention_days: 30
    
  tasks:
    - name: List all current backups
      find:
        paths: "{{ unraid_backup_path }}"
        patterns: "*.zip"
      register: all_backups

    - name: Calculate total backup size
      shell: du -sh {{ unraid_backup_path }} | cut -f1
      register: backup_size
      changed_when: false

    - name: Display backup summary
      debug:
        msg: |
          ========================================
          Technitium DNS Backup Summary
          ========================================
          Total Backups: {{ all_backups.files | length }}
          Total Size: {{ backup_size.stdout }}
          Location: {{ unraid_backup_path }}
          Retention: {{ backup_retention_days }} days
          ========================================
